// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.
import 'dart:core';
import 'package:promise/features/promise/ui/models/schedule_options.dart'
    as prefix5;
import 'package:promise/models/memory/memory.dart' as prefix2;
import 'package:promise/models/objective/objective.dart' as prefix4;
import 'package:promise/models/person/person.dart' as prefix1;
import 'package:promise/models/promise/promise.dart' as prefix3;
import 'package:promise/models/reminders/reminder.dart' as prefix7;
import 'package:promise/models/system-versions/system-version.model.dart'
    as prefix8;
import 'package:promise/models/work/work.dart' as prefix6;
import 'package:promise/util/reflectable.hive.dart' as prefix0;

// ignore_for_file: camel_case_types
// ignore_for_file: implementation_imports
// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const
// ignore_for_file: unused_import

import 'package:reflectable/mirrors.dart' as m;
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.HiveTypeReflector(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r'Person',
            r'.Person',
            134217735,
            0,
            const prefix0.HiveTypeReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r'': (bool b) => (
                      {id,
                      userId,
                      email,
                      firstName,
                      lastName,
                      references,
                      color,
                      nickname}) =>
                  b
                      ? prefix1.Person(
                          color: color,
                          email: email,
                          firstName: firstName,
                          id: id,
                          lastName: lastName,
                          nickname: nickname,
                          references: references,
                          userId: userId)
                      : null,
              r'fromJson': (bool b) =>
                  (json) => b ? prefix1.Person.fromJson(json) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {
              r'==': 1,
              r'toString': 0,
              r'noSuchMethod': 1,
              r'hashCode': 0,
              r'runtimeType': 0,
              r'id': 0,
              r'id=': 1,
              r'userId': 0,
              r'userId=': 1,
              r'isDeleted': 0,
              r'isDeleted=': 1,
              r'createdAt': 0,
              r'createdAt=': 1,
              r'updatedAt': 0,
              r'updatedAt=': 1,
              r'fromJsonMethod': 0,
              r'email': 0,
              r'email=': 1,
              r'firstName': 0,
              r'firstName=': 1,
              r'lastName': 0,
              r'lastName=': 1,
              r'references': 0,
              r'references=': 1,
              r'nickname': 0,
              r'nickname=': 1,
              r'color': 0,
              r'color=': 1
            }),
        r.NonGenericClassMirrorImpl(
            r'UserReference',
            r'.UserReference',
            134217735,
            1,
            const prefix0.HiveTypeReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r'': (bool b) => ({referenceUserId, hint, color}) => b
                  ? prefix1.UserReference(
                      color: color,
                      hint: hint,
                      referenceUserId: referenceUserId)
                  : null,
              r'fromJson': (bool b) =>
                  (json) => b ? prefix1.UserReference.fromJson(json) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {
              r'==': 1,
              r'toString': 0,
              r'noSuchMethod': 1,
              r'hashCode': 0,
              r'runtimeType': 0,
              r'toJson': 0,
              r'referenceUserId': 0,
              r'referenceUserId=': 1,
              r'hint': 0,
              r'hint=': 1,
              r'color': 0,
              r'color=': 1,
              r'value': 0
            }),
        r.NonGenericClassMirrorImpl(
            r'ViewColor',
            r'.ViewColor',
            134217735,
            2,
            const prefix0.HiveTypeReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r'': (bool bb) => ({a, r, g, b}) =>
                  bb ? prefix1.ViewColor(a: a, b: b, g: g, r: r) : null,
              r'fromJson': (bool b) =>
                  (json) => b ? prefix1.ViewColor.fromJson(json) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {
              r'==': 1,
              r'toString': 0,
              r'noSuchMethod': 1,
              r'hashCode': 0,
              r'runtimeType': 0,
              r'toJson': 0,
              r'a': 0,
              r'a=': 1,
              r'r': 0,
              r'r=': 1,
              r'g': 0,
              r'g=': 1,
              r'b': 0,
              r'b=': 1
            }),
        r.NonGenericClassMirrorImpl(
            r'Memory',
            r'.Memory',
            134217735,
            3,
            const prefix0.HiveTypeReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r'': (bool b) => ({id, description}) =>
                  b ? prefix2.Memory(description: description, id: id) : null,
              r'fromJson': (bool b) =>
                  (json) => b ? prefix2.Memory.fromJson(json) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {
              r'==': 1,
              r'toString': 0,
              r'noSuchMethod': 1,
              r'hashCode': 0,
              r'runtimeType': 0,
              r'id': 0,
              r'id=': 1,
              r'userId': 0,
              r'userId=': 1,
              r'isDeleted': 0,
              r'isDeleted=': 1,
              r'createdAt': 0,
              r'createdAt=': 1,
              r'updatedAt': 0,
              r'updatedAt=': 1,
              r'fromJsonMethod': 0,
              r'description': 0,
              r'description=': 1
            }),
        r.NonGenericClassMirrorImpl(
            r'Promise',
            r'.Promise',
            134217735,
            4,
            const prefix0.HiveTypeReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r'': (bool b) => (
                      {content,
                      expectedTime = null,
                      to = null,
                      forYourself = false}) =>
                  b
                      ? prefix3.Promise(
                          expectedTime: expectedTime,
                          forYourself: forYourself,
                          to: to,
                          content: content)
                      : null,
              r'create': (bool b) =>
                  ({content, forYourself, to = null, expectedTime = null}) => b
                      ? prefix3.Promise.create(
                          expectedTime: expectedTime,
                          to: to,
                          content: content,
                          forYourself: forYourself)
                      : null,
              r'modify': (bool b) => (
                      {id,
                      userId,
                      content,
                      forYourself,
                      to = null,
                      expectedTime = null}) =>
                  b
                      ? prefix3.Promise.modify(
                          expectedTime: expectedTime,
                          to: to,
                          content: content,
                          forYourself: forYourself,
                          id: id,
                          userId: userId)
                      : null,
              r'fromJson': (bool b) =>
                  (input) => b ? prefix3.Promise.fromJson(input) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {
              r'==': 1,
              r'toString': 0,
              r'noSuchMethod': 1,
              r'hashCode': 0,
              r'runtimeType': 0,
              r'id': 0,
              r'id=': 1,
              r'userId': 0,
              r'userId=': 1,
              r'isDeleted': 0,
              r'isDeleted=': 1,
              r'createdAt': 0,
              r'createdAt=': 1,
              r'updatedAt': 0,
              r'updatedAt=': 1,
              r'toJson': 0,
              r'fromJsonMethod': 0,
              r'content': 0,
              r'expectedTime': 0,
              r'to': 0,
              r'forYourself': 0
            }),
        r.NonGenericClassMirrorImpl(
            r'Objective',
            r'.Objective',
            134217735,
            5,
            const prefix0.HiveTypeReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r'': (bool b) => ({content, promiseId}) => b
                  ? prefix4.Objective(content: content, promiseId: promiseId)
                  : null,
              r'create': (bool b) => ({content, promiseId, works}) => b
                  ? prefix4.Objective.create(
                      content: content, promiseId: promiseId, works: works)
                  : null,
              r'modify': (bool b) => ({id, content, promiseId, works}) => b
                  ? prefix4.Objective.modify(
                      content: content,
                      id: id,
                      promiseId: promiseId,
                      works: works)
                  : null,
              r'fromJson': (bool b) =>
                  (input) => b ? prefix4.Objective.fromJson(input) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {
              r'==': 1,
              r'toString': 0,
              r'noSuchMethod': 1,
              r'hashCode': 0,
              r'runtimeType': 0,
              r'id': 0,
              r'id=': 1,
              r'userId': 0,
              r'userId=': 1,
              r'isDeleted': 0,
              r'isDeleted=': 1,
              r'createdAt': 0,
              r'createdAt=': 1,
              r'updatedAt': 0,
              r'updatedAt=': 1,
              r'fromJsonMethod': 0,
              r'toJson': 0,
              r'promiseId': 0,
              r'promiseId=': 1,
              r'content': 0,
              r'content=': 1,
              r'works': 0,
              r'works=': 1
            }),
        r.NonGenericClassMirrorImpl(
            r'ScheduleType',
            r'.ScheduleType',
            138412039,
            6,
            const prefix0.HiveTypeReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {
              r'Range': () => prefix5.ScheduleType.Range,
              r'WorkingDays': () => prefix5.ScheduleType.WorkingDays,
              r'values': () => prefix5.ScheduleType.values
            },
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            null,
            {
              r'==': 1,
              r'toString': 0,
              r'noSuchMethod': 1,
              r'hashCode': 0,
              r'runtimeType': 0,
              r'index': 0,
              r'Range': 0,
              r'WorkingDays': 0,
              r'values': 0
            }),
        r.NonGenericClassMirrorImpl(
            r'Work',
            r'.Work',
            134217735,
            7,
            const prefix0.HiveTypeReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r'': (bool b) => ({content, from, to, scheduleType, reminder}) =>
                  b
                      ? prefix6.Work(
                          content: content,
                          from: from,
                          reminder: reminder,
                          scheduleType: scheduleType,
                          to: to)
                      : null,
              r'create': (bool b) =>
                  ({content, from, to, scheduleType, reminder}) => b
                      ? prefix6.Work.create(
                          from: from,
                          to: to,
                          content: content,
                          reminder: reminder,
                          scheduleType: scheduleType)
                      : null,
              r'fromJson': (bool b) =>
                  (input) => b ? prefix6.Work.fromJson(input) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {
              r'==': 1,
              r'toString': 0,
              r'noSuchMethod': 1,
              r'hashCode': 0,
              r'runtimeType': 0,
              r'id': 0,
              r'id=': 1,
              r'userId': 0,
              r'userId=': 1,
              r'toJson': 0,
              r'content': 0,
              r'content=': 1,
              r'from': 0,
              r'from=': 1,
              r'to': 0,
              r'to=': 1,
              r'reminder': 0,
              r'reminder=': 1,
              r'scheduleType': 0,
              r'scheduleType=': 1
            }),
        r.NonGenericClassMirrorImpl(
            r'Reminder',
            r'.Reminder',
            134217735,
            8,
            const prefix0.HiveTypeReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r'': (bool b) =>
                  ({notiicationContent, notiicationDetails, expression}) => b
                      ? prefix7.Reminder(
                          expression: expression,
                          notiicationContent: notiicationContent,
                          notiicationDetails: notiicationDetails)
                      : null,
              r'fromJson': (bool b) =>
                  (input) => b ? prefix7.Reminder.fromJson(input) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {
              r'==': 1,
              r'toString': 0,
              r'noSuchMethod': 1,
              r'hashCode': 0,
              r'runtimeType': 0,
              r'id': 0,
              r'id=': 1,
              r'userId': 0,
              r'userId=': 1,
              r'isDeleted': 0,
              r'isDeleted=': 1,
              r'createdAt': 0,
              r'createdAt=': 1,
              r'updatedAt': 0,
              r'updatedAt=': 1,
              r'fromJsonMethod': 0,
              r'toJson': 0,
              r'notiicationDetails': 0,
              r'notiicationDetails=': 1,
              r'notiicationContent': 0,
              r'notiicationContent=': 1,
              r'expression': 0,
              r'expression=': 1
            }),
        r.NonGenericClassMirrorImpl(
            r'SystemVersion',
            r'.SystemVersion',
            134217735,
            9,
            const prefix0.HiveTypeReflector(),
            const <int>[-1],
            null,
            null,
            -1,
            {},
            {},
            {
              r'': (bool b) => ({id, userId, versions}) => b
                  ? prefix8.SystemVersion(
                      id: id, userId: userId, versions: versions)
                  : null,
              r'fromJson': (bool b) =>
                  (json) => b ? prefix8.SystemVersion.fromJson(json) : null
            },
            -1,
            -1,
            const <int>[-1],
            null,
            {
              r'==': 1,
              r'toString': 0,
              r'noSuchMethod': 1,
              r'hashCode': 0,
              r'runtimeType': 0,
              r'id': 0,
              r'id=': 1,
              r'userId': 0,
              r'userId=': 1,
              r'versions': 0,
              r'versions=': 1,
              r'modelVersions': 0,
              r'modelVersions=': 1
            })
      ],
      null,
      null,
      <Type>[
        prefix1.Person,
        prefix1.UserReference,
        prefix1.ViewColor,
        prefix2.Memory,
        prefix3.Promise,
        prefix4.Objective,
        prefix5.ScheduleType,
        prefix6.Work,
        prefix7.Reminder,
        prefix8.SystemVersion
      ],
      10,
      {
        r'==': (dynamic instance) => (x) => instance == x,
        r'toString': (dynamic instance) => instance.toString,
        r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
        r'hashCode': (dynamic instance) => instance.hashCode,
        r'runtimeType': (dynamic instance) => instance.runtimeType,
        r'id': (dynamic instance) => instance.id,
        r'userId': (dynamic instance) => instance.userId,
        r'isDeleted': (dynamic instance) => instance.isDeleted,
        r'createdAt': (dynamic instance) => instance.createdAt,
        r'updatedAt': (dynamic instance) => instance.updatedAt,
        r'fromJsonMethod': (dynamic instance) => instance.fromJsonMethod,
        r'email': (dynamic instance) => instance.email,
        r'firstName': (dynamic instance) => instance.firstName,
        r'lastName': (dynamic instance) => instance.lastName,
        r'references': (dynamic instance) => instance.references,
        r'nickname': (dynamic instance) => instance.nickname,
        r'color': (dynamic instance) => instance.color,
        r'toJson': (dynamic instance) => instance.toJson,
        r'referenceUserId': (dynamic instance) => instance.referenceUserId,
        r'hint': (dynamic instance) => instance.hint,
        r'value': (dynamic instance) => instance.value,
        r'a': (dynamic instance) => instance.a,
        r'r': (dynamic instance) => instance.r,
        r'g': (dynamic instance) => instance.g,
        r'b': (dynamic instance) => instance.b,
        r'description': (dynamic instance) => instance.description,
        r'content': (dynamic instance) => instance.content,
        r'expectedTime': (dynamic instance) => instance.expectedTime,
        r'to': (dynamic instance) => instance.to,
        r'forYourself': (dynamic instance) => instance.forYourself,
        r'promiseId': (dynamic instance) => instance.promiseId,
        r'works': (dynamic instance) => instance.works,
        r'index': (dynamic instance) => instance.index,
        r'from': (dynamic instance) => instance.from,
        r'reminder': (dynamic instance) => instance.reminder,
        r'scheduleType': (dynamic instance) => instance.scheduleType,
        r'notiicationDetails': (dynamic instance) =>
            instance.notiicationDetails,
        r'notiicationContent': (dynamic instance) =>
            instance.notiicationContent,
        r'expression': (dynamic instance) => instance.expression,
        r'versions': (dynamic instance) => instance.versions,
        r'modelVersions': (dynamic instance) => instance.modelVersions
      },
      {
        r'id=': (dynamic instance, value) => instance.id = value,
        r'userId=': (dynamic instance, value) => instance.userId = value,
        r'isDeleted=': (dynamic instance, value) => instance.isDeleted = value,
        r'createdAt=': (dynamic instance, value) => instance.createdAt = value,
        r'updatedAt=': (dynamic instance, value) => instance.updatedAt = value,
        r'email=': (dynamic instance, value) => instance.email = value,
        r'firstName=': (dynamic instance, value) => instance.firstName = value,
        r'lastName=': (dynamic instance, value) => instance.lastName = value,
        r'references=': (dynamic instance, value) =>
            instance.references = value,
        r'nickname=': (dynamic instance, value) => instance.nickname = value,
        r'color=': (dynamic instance, value) => instance.color = value,
        r'referenceUserId=': (dynamic instance, value) =>
            instance.referenceUserId = value,
        r'hint=': (dynamic instance, value) => instance.hint = value,
        r'a=': (dynamic instance, value) => instance.a = value,
        r'r=': (dynamic instance, value) => instance.r = value,
        r'g=': (dynamic instance, value) => instance.g = value,
        r'b=': (dynamic instance, value) => instance.b = value,
        r'description=': (dynamic instance, value) =>
            instance.description = value,
        r'promiseId=': (dynamic instance, value) => instance.promiseId = value,
        r'content=': (dynamic instance, value) => instance.content = value,
        r'works=': (dynamic instance, value) => instance.works = value,
        r'from=': (dynamic instance, value) => instance.from = value,
        r'to=': (dynamic instance, value) => instance.to = value,
        r'reminder=': (dynamic instance, value) => instance.reminder = value,
        r'scheduleType=': (dynamic instance, value) =>
            instance.scheduleType = value,
        r'notiicationDetails=': (dynamic instance, value) =>
            instance.notiicationDetails = value,
        r'notiicationContent=': (dynamic instance, value) =>
            instance.notiicationContent = value,
        r'expression=': (dynamic instance, value) =>
            instance.expression = value,
        r'versions=': (dynamic instance, value) => instance.versions = value,
        r'modelVersions=': (dynamic instance, value) =>
            instance.modelVersions = value
      },
      null,
      [
        const [0, 0, null],
        const [1, 0, null],
        const [
          0,
          0,
          const [
            #id,
            #userId,
            #email,
            #firstName,
            #lastName,
            #references,
            #color,
            #nickname
          ]
        ],
        const [
          0,
          0,
          const [#referenceUserId, #hint, #color]
        ],
        const [
          0,
          0,
          const [#a, #r, #g, #b]
        ],
        const [
          0,
          0,
          const [#id, #description]
        ],
        const [
          0,
          0,
          const [#content, #expectedTime, #to, #forYourself]
        ],
        const [
          0,
          0,
          const [#id, #userId, #content, #forYourself, #to, #expectedTime]
        ],
        const [
          0,
          0,
          const [#content, #promiseId]
        ],
        const [
          0,
          0,
          const [#content, #promiseId, #works]
        ],
        const [
          0,
          0,
          const [#id, #content, #promiseId, #works]
        ],
        const [
          0,
          0,
          const [#content, #from, #to, #scheduleType, #reminder]
        ],
        const [
          0,
          0,
          const [#notiicationContent, #notiicationDetails, #expression]
        ],
        const [
          0,
          0,
          const [#id, #userId, #versions]
        ]
      ])
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
